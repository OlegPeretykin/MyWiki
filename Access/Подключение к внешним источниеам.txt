Я когда-то написал вот здесь как можно в запросах в режиме конструктора создавать алиасы (псевдонимы) таблиц не заходя в режим SQL. В справочнике MS Access 2003 есть такая статья "Создание псевдонимов таблиц в запросе (ADP)", где собственно и написано о псевдонимах.
-
Примечание. Сведения в данном разделе относятся только к проектам Microsoft Access (.adp).

Псевдонимы создаются для облегчения работы с именами таблиц, представлений или функций. Использование псевдонимов является полезным в следующих случаях.

Необходимо создать инструкцию в области SQL, которая будет более короткой и простой для чтения.
При частом обращении в запросе к имени таблицы, представления или функции, например к полным именам столбцов, необходимо быть уверенным, что не превышен предел количества знаков в запросе.
При работе с несколькими копиями одной и той же таблицы, представления или функции (например в самообъединении) необходимо указать ссылку на одну из копий.
Например, можно создать псевдоним "e" для таблицы employee_information, а затем использовать "e" при ссылке на нее.

В окне базы данных в списке Объекты нажмите кнопку Запросы , выберите запрос, который нужно открыть, и на панели инструментов окна базы данных нажмите кнопку Конструктор.
В области схемы щелкните правой кнопкой таблицу, представление или функцию, для которой необходимо создать псевдоним, и выберите в контекстном меню команду Свойства.
В диалоговом окне Свойства введите псевдоним в поле Псевдоним.
При создании псевдонима таблицы конструктор запросов подставит псевдоним вместо соответствующего имени таблицы в столбце «Таблица» в области сетки.

Примечание. Если для таблицы создан псевдоним, то при ссылке на таблицу в инструкции SQL необходимо использовать именно псевдоним (использовать оригинальное имя таблицы нельзя).

В справочнике написано, что данный способ относится только к проектам adp. Но на самом деле и в обычных mdb файлах подобным образом также возможно создавать псевдонимы. (См. рисунок)
Там в свойствах помимо "Псевдоним" есть ещё другое не менее интересное свойство "Источник", где можно указать путь любой другой базы и тогда Access будет тянуть информацию из указанной базы. Например, напишем так: "C:\Test.mdb", после этого смотрим в режиме SQL текст запроса.
SELECT * FROM [C:\Test.mdb].MSysObjects AS O
В справочниках Accessа я не встретил ни одного умопинания о том, как надо написать в данное свойство текст подключения, чтобы достать таблицу или представление из другой СУБД, например из MS SQL Server. Оказывается всё очень просто. Нужно написать так (это пожалуй самый простой текст подключения):
ODBC;DSN=НазваниеDSN;Database=НазваниеБД;
Можно также указывать логин и пароль здесь же:
ODBC;DSN=НазваниеDSN;Database=НазваниеБД;UID=SA;PWD=123456
Таким образом можно достать только таблицу или представление из другой СУБД, а вот другие объекты БД (функция, хранимая процедура и т.д.) нельзя. Запрос в таких случаях работает так, как если бы он был линкованной таблицей и станет обновляемым, если конечно же имеется первичный ключ / уникальный индекс.
Текст запроса в режиме SQL выглядит примерно так:
SELECT * FROM [ODBC;DSN=НазваниеDSN;Database=НазваниеБД;UID=SA;PWD=123456].dbo.Table1 AS T
Здесь название владельца / схемы "dbo" можно пропустить.
Есть ещё одна альтернатива: предложение IN, с помощью которого также возможно достать таблицы или представления из MS SQL Server (предполагаю, что и с другими видами СУБД дела обстоят аналогичным образом). Но тут есть небольшие сюрпризы, о которых нигде не пишут (во всяком случае я не нашёл).
Сначала цитата из справочника:
-
Предложение IN
Определяет таблицы в любой внешней базе данных, с которой ядро базы данных Microsoft Jet может установить связь, например в базе данных dBASE, Paradox или внешней базе данных с ядром Microsoft® Jet.

Синтаксис
Чтобы определить результирующую таблицу:

[SELECT | INSERT] INTO назначение IN
{путь | ["путь" "тип"] | ["" [тип; DATABASE = путь]]}

Чтобы определить исходную таблицу:

FROM выражение IN
{путь | ["путь" "тип"] | ["" [тип; DATABASE = путь]]}

Ниже перечислены аргументы инструкции SELECT, содержащей предложение IN:

Элемент Описание
назначение Имя внешней таблицы, в которую добавляются данные.
выражение Имена одной или нескольких таблиц, из которых отбираются данные. Это выражение может быть именем отдельной таблицы, именем сохраненного запроса или результатом операции INNER JOIN, LEFT JOIN или RIGHT JOIN.
путь Полный путь к каталогу или файлу, в котором находится таблица.
тип Имя типа базы данных, в которой создана таблица, если база данных несовместима со стандартом Microsoft Jet (например, dBASE III, dBASE IV, Paradox 3.x или Paradox 4.x).


Дополнительные сведения
С помощью предложения IN можно одновременно подключиться только к одной внешней базе данных.

В некоторых случаях аргумент путь задает ссылку на каталог, содержащий файлы базы данных. 
Например, во время работы с таблицами баз данных dBASE, Microsoft FoxPro® или Paradox аргумент путь задает ссылку на каталог, 
содержащий файлы .dbf или .db. Имя файла таблицы извлекается из аргументов назначение или выражение.

Чтобы определить базу данных, несовместимую со стандартом Microsoft Jet, следует добавить к ее имени знак точки с запятой (;) и 
заключить имя в одинарные (' ') или прямые (" ") кавычки. Например, 'dBASE IV;' или "dBASE IV;".

Кроме того, для описания внешней базы данных можно использовать зарезервированное слово DATABASE. Например, следующие строки описывают одну и ту же таблицу:

... FROM Таблица IN "" [dBASE IV; DATABASE=C:\DBASE\DATA\SALES;];

... FROM Таблица IN "C:\DBASE\DATA\SALES" "dBASE IV;"

Там же есть примеры подключения (но только почему-то о MS SQL Server ни слова!):
-
Предложение IN, примеры

В следующей таблице демонстрируется использование предложения IN для отбора данных из внешней базы данных. 
В примерах предполагается, что таблица «Клиенты» сохраняется во внешней базе данных.

База данных	Инструкция SQL
База данных Microsoft® Jet	SELECT КодКлиента FROM Клиенты IN Заказы.mdb WHERE КодКлиента Like "A*";
dBASE III или IV. Для отбора данных из таблицы dBASE III, замените "dBASE III;" на 
"dBASE IV;".	SELECT КодКлиента FROM Клиенты IN "C:\DBASE\DATA\SALES" "dBASE IV;" WHERE КодКлиента Like "A*";
dBASE III или IV в синтаксисе Database.	SELECT КодКлиента FROM Клиенты IN "" [dBASE IV; Database=C:\DBASE\DATA\SALES;] WHERE КодКлиента Like "A*";
Paradox 3.x или 4.x. Для отбора данных из таблицы Paradox версии 3.x, замените "Paradox 3.x;" на "Paradox 4.x;".	
SELECT КодКлиента FROM Клиенты IN "C:\PARADOX\DATA\SALES" "Paradox 4.x;" WHERE КодКлиента Like "A*";
Paradox 3.x или 4.x в синтаксисе Database.	SELECT КодКлиента FROM Клиенты IN "" [Paradox 4.x;Database=C:\PARADOX\DATA\SALES;] WHERE КодКлиента Like "A*";

!!!!!!!!!!!!!!!!!!!!!!

Книга Microsoft Excel	SELECT КодКлиента, Название FROM [Клиенты$] IN "c:\documents\xldata.xls" "EXCEL 5.0;" WHERE КодКлиента Like "A*" ORDER BY КодКлиента;
Именованный диапазон электронной таблицы	
SELECT КодКлиента, Название FROM ДиапазонКлиенты IN "c:\documents\xldata.xls" "EXCEL 5.0;" WHERE КодКлиента Like "A*" ORDER BY КодКлиента;

!!!!!!!!!!!!!!!!!!!!!!!!!

Как же следует указать текст подключения в предложениях IN, чтобы получить данные из определённой таблицы или представления?
Сначала укажем пустую строку (либо 2 апострофа '', либо 2 кавычки "", либо 2 квадратные скобки []) или же любое слово, 
но без пробелов и только потом текст подключения. Текст подключения также следует написать либо внутри апострофов, 
либо кавычек, либо квадратных скобок. Вот варианты

SELECT * FROM Table1 IN ЛюбоеСловоНоТолькоБезПробеловИЖелательноБезПлохихСимволов 'ODBC;DSN=НазваниеDSN;Database=НазваниеБД;UID=SA;PWD=123456'
SELECT * FROM Table1 IN "" [ODBC;DSN=НазваниеDSN;Database=НазваниеБД;UID=SA;PWD=123456]

Как вы видите кавычки, апострофы, квадратные скобки можно использовать вперемежку.
Но в то же время также можно текст подключения разделить на 2 части и указать отдельно. Типа так:
SELECT * FROM Table1 IN 'Database=НазваниеБД' [ODBC;DSN=НазваниеDSN;UID=SA;PWD=123456]

При этом если указан логин и пароль, то следует их указать во 2-части текста подключения.
Если логин и пароль пользователя не указан, а также отсутствует параметр "Trusted_Connection=Yes", 
то при первом запуске запроса выходит диалоговое окно, куда и следует ввести логин и пароль для доступа к серверу.