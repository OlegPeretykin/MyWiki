

apt install iptables-persistent
---
ls /etc/iptables
rules.v4  rules.v6
---

Также в системе появляется новая служба - 
netfilter-persistent
которая позволяет удобно управлять брандмауэром, так если вы внесли изменения в файл с правилами и хотите их применить, то выполните:
netfilter-persistent reload

Для сохранения текущей конфигурации отдайте команду:
netfilter-persistent save

А если вам надо полностью очистить конфигурацию брандмауэра, то наберите:
netfilter-persistent flush

Это удобно если вам нужно проверить, не является ли брандмауэр причиной каких-либо проблем, быстро сбрасываем конфигурацию, проверяем и загружаем ее заново.

===================================================================

Настройка брандмауэра iptables
В Debian 11 в качестве брандмауэра установлен пакет nftables, это более мощное и продвинутое ПО, но требующее отдельного изучения. Если вы не готовы с ним работать, то можно вернуть привычный iptables и продолжать его использование. При этом на самом деле будет продолжать работать nftables, но в режиме совместимости с iptables.

Установим необходимые пакеты:

apt install iptables iptables-persistent
Теперь в порядке перечисленном ниже выполним следующие команды:

iptables -A INPUT -i ens33 -m conntrack --ctstate ESTABLISHED,RELATED -j ACCEPT
iptables -A INPUT -i ens33 -m conntrack --ctstate INVALID -j DROP
iptables -A INPUT -i ens33 -p icmp -j ACCEPT
iptables -A INPUT -i ens33 -p tcp --dport 22 -m conntrack --ctstate NEW -j ACCEPT
iptables -A INPUT -i ens33 -j DROP
Тем самым мы создадим минимальную конфигурацию брандмауэра. Первое правило разрешает уже установленные и связанные с ними соединения. Второе блокирует пакеты, не являющиеся первым пакетом соединения и не относящиеся к другим соединениям. Затем мы разрешаем соединения по протоколу ICMP (ping, PMTUD) и SSH-соединения (порт TCP 22). Затем полностью блокируем все остальные входящие соединения.

Проверяем, что все работает и сервер остается доступным по сети, после чего сохраняем правила командой:

iptables-save > /etc/iptables/rules.v4
Благодаря пакету iptables-persistent сохранённые правила теперь будут автоматически восстанавливаться при загрузке системы. Для их изменения удобнее всего вносить правки в файл /etc/iptables/rules.v4.
-----------------------------------------
Пример проброса портов:
iptables -A PREROUTING -t nat -i vmbr0 -p tcp -d 94.242.234.20 --dport 80 -j DNAT --to 10.0.33.100:80
iptables -A PREROUTING -t nat -i vmbr0 -p tcp -d 94.242.234.20 --dport 443 -j DNAT --to 10.0.33.100:443
iptables -A PREROUTING -t nat -i vmbr0 -p tcp -d 94.242.234.20 --dport 6443 -j DNAT --to 10.0.33.100:6443
-----------

iptables-save > /etc/iptables.up.rules
nano /etc/network/if-pre-up.d/iptables
-----
#!/bin/bash
/sbin/iptables-restore < /etc/iptables.up.rules
-----
chmod +x /etc/network/if-pre-up.d/iptables

Посмотреть на созданные правила:
root@alfa:~# sudo iptables -t nat -L PREROUTING --line-numbers -n -v

Удалить их:
root@alfa:~# sudo iptables -t nat -F
------------------------------------------------

Редактируя файл следует придерживаться следующих правил: первыми всегда должны идти два правила, выделенные нами желтым, а последним - запрещающее. выделенное красным. Все остальные правила должны размещаться между ними, при этом учитывайте, что правила проверяются в порядке их перечисления в файле и после срабатывания правила прохождение пакета через брандмауэр прекращается. Поэтому размещайте более частные правила выше более общих, в противном случае они никогда не сработают.

После сохранения изменений загрузите правила командой:

iptables-restore < /etc/iptables/rules.v4
Посмотреть действующие правила и их счетчики можно командой:

iptables -L -vn
Не пренебрегайте настройкой брандмауэра даже если ваш сервер находится внутри периметра и не имеет непосредственного выхода во внешнюю сеть. Безопасности много не бывает!
