Exemple:

Создаём виртуальное окружение находясь в текущей папке проекта в папке myenv

python3 -m venv myenv

где myenv - это просто путь до папки где и будут хранится файлы окружения
сразу же создаются три компонента и один из них - pip что важно
***

Советуют ещё вот такой вариант
python -m venv ~/.virtualenvs/my-env

в нашем случае целесообразно в папке home/maestro3d создать папку, допустим, v-env и уже в ней создавать варианты окружений Python. При этом как то внятно их называть и помещать внутрь файл-описание
***

Активируем виртуальную среду
source myenv/bin/activate
в терминале, в префиксе текущей строки, появится имя окружения 

Можно писать просто pip и python с терминале или в скрипте когда находишся внутри окружения
особенно это целесообразно в скриптах - они не сработают вне контекста окружения 

Деактивируем
deactivate

Вызов в контексте виртуального окружения из чистой ос находясь в текущей папке 
myenv/bin/python3 testapp.py 
------------------------------------------------------

usage: venv [-h] [--system-site-packages] [--symlinks | --copies] [--clear]
            [--upgrade] [--without-pip] [--prompt PROMPT] [--upgrade-deps]
            ENV_DIR [ENV_DIR ...]

Creates virtual Python environments in one or more target directories.

positional arguments:
  ENV_DIR               A directory to create the environment in.

optional arguments:
  -h, --help            show this help message and exit
  --system-site-packages
                        Give the virtual environment access to the system
                        site-packages dir.
  --symlinks            Try to use symlinks rather than copies, when symlinks
                        are not the default for the platform.
  --copies              Try to use copies rather than symlinks, even when
                        symlinks are the default for the platform.
  --clear               Delete the contents of the environment directory if it
                        already exists, before environment creation.
  --upgrade             Upgrade the environment directory to use this version
                        of Python, assuming Python has been upgraded in-place.
  --without-pip         Skips installing or upgrading pip in the virtual
                        environment (pip is bootstrapped by default)
  --prompt PROMPT       Provides an alternative prompt prefix for this
                        environment.
  --upgrade-deps        Upgrade core dependencies: pip setuptools to the
                        latest version in PyPI

Once an environment has been created, you may wish to activate it, e.g. by
sourcing an activate script in its bin directory.