Как установить NVM на Debian 11
 

В этом руководстве мы покажем вам, как установить NVM в Debian 11. Для тех из вас, кто не знал, NVM означает Node Version Manager, который представляет собой инструмент командной строки, используемый для установки и управления несколькими версиями Node.JS. Это позволяет программистам устанавливать Node.js только в свою учетную запись. Это означает, что установка выполняется под конкретного пользователя. У всех пользователей в единой системе есть собственная установка Node.js.

В этой статье предполагается, что у вас есть хотя бы базовые знания Linux, вы знаете, как использовать оболочку, и, что наиболее важно, вы размещаете свой сайт на собственном VPS. Установка довольно проста и предполагает, что вы работаете с учетной записью root, в противном случае вам может потребоваться добавить ‘ sudo‘ к командам для получения привилегий root. Я покажу вам пошаговую установку NVM (Node Version Manager) на Debian 11 (Bullseye).

Установите NVM на Debian 11 Bullseye
Шаг 1. Перед установкой любого программного обеспечения важно убедиться, что ваша система обновлена, выполнив следующие aptкоманды в терминале:
sudo apt update
sudo apt upgrade
sudo apt install build-essential curl gnupg2
Шаг 2. Установка NVM в Debian 11.
aviso | рекламный сервис
Теперь мы запускаем следующую команду, чтобы загрузить и запустить сценарий установки NVM:

curl https://raw.githubusercontent.com/creationix/nvm/master/install.sh | bash
Затем добавляет в файл переменные среды для NVM :.bashrc

source ~/.bashrc
Или просто выйдите из системы, войдите снова и подтвердите установленную версию NVM:

nvm --version
Шаг 3. Установка Node.js с NVM.
Чтобы установить последнюю версию Node.js, выполните следующую команду:

nvm install node

Если вы хотите установить последнюю версию LTS (Long Term Service), выполните команду:

nvm install node --lts
Вы также можете указать конкретную версию NodeJS, указав номер версии. Например:

nvm install 12.19.0
Шаг 4. Используйте NVM для управления Node.js.
Чтобы вывести список всех установленных версий Node.JS, запустите:

nvm ls
Чтобы установить версию Node.js по умолчанию на 12.17.0, выполните следующую команду:

nvm use 12.19.0
Чтобы проверить версию по умолчанию, уже установленную в вашей учетной записи, запустите:

nvm run default --version
Вы можете запустить Node-скрипт с нужной версией node.js, используя следующую команду:

nvm exec 12.19.0 server.js

---------------------------------------------------------------------

Для этого обычно используется пакет nvm, но он работает только на linux и macos. Если вы обладатель window, то вы можете использовать пакет nvm-windows.

Оба эти пакета делают одно и то же. Они позволяют переключаться между версиями node. Я буду показывать все на примере nvm, но команды в обоих пакетах будут одинаковые.

Если у вас windows качаем последний релиз из списка релизов и устанавливаем, а если linux или macos то выполняем команду

curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.33.0/install.sh | bash
В результате установки у вас в консоли команда nvm должна вывести список доступных команд. Для начала нам нужно установить хотя бы одну версию nodejs. Команда

nvm install node
Установит последний релиз node. Но я предпочитаю указывать версию которая мне нужна. Поэтому давайте установим последнюю стабильную версию командой

nvm install 6.9.2
Так как у вас сейчас это единственная установленная версия node на компьютере, то она всегда будет выбираться по умолчанию. А теперь представим, что нам дали проект, который работает на версии 5.9, но на 6 уже не работает. nvm позволяет нам легко установить версию 5.9 и переключится на нее

nvm install 5.9
И теперь если в проекте нам нужно использовать эту версию, мы просто пишем

nvm use 5.9
И это переключит нам версию на 5.9.

Команда nvm list выведет список установленных версий на вашей машине

nvm list
Также nvm хороша тем, что все версии ноды и глобальные пакеты лежат в одной папке и вы всегда знаете где они находятся и откуда их удалить. На macos или linux это будет домашняя директория.

ls ~/.nvm/versions/node/
После того, как мы написали nvm use 6.9, у нас в консоли должны быть доступны node и npm для дальнейшей работы. Проверить это можно с помощью команд

node -v
npm -v